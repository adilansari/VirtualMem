{"name":"Virtualmem","tagline":"Virtual Memory Management algorithms","body":"# Virtual Memory Manager “virtualmem” in C/C++ on a UNIX-based platform.\r\n\r\n\r\n\r\n### SYNOPSIS:\r\nTo run this program:\r\n> **virtualmem [−h] [-f available-frames] [−r replacement-policy] [−i input_file]**\r\n\r\n\r\n### DESCRIPTION:\r\n_virtualmem_ is a simple virtual memory manager. It takes a sequence of page references as an input, as well as the number of available frames. It performs the placement of these pages to the available frames using the page replacement policy specified by the user.\r\n\r\n\r\n### OPTIONS:\r\n*\t**−h** : Print a usage summary with all options and exit.\r\n*\t**−f** : *available-frames* : Set the number of available frames. By default it should be 5.\r\n*\t**−r** : *replacement-policy* : Set the page replacement policy. It can be either:\r\n\t*\t**FIFO** (First-in-first-out)\r\n\t*\t**LFU** (Least-frequently-used)\r\n\t*\t**LRU-STACK** (Least-recently-used stack implementation)\r\n\t*\t**LRU-CLOCK** (Least-recently-used clock implementation –second chance algo)\r\n\t*\t**LRU-REF8** (Least-recently-used Reference-bitImplementation, using 8 reference bits)\r\n*The default will be FIFO.*\r\n*\t**−i** : *input file* : Read the page reference sequence from a specified file. If not given,the sequence should be read from STDIN (ended with ENTER).\r\n\r\n\r\n### OUTPUT:\r\nAlso implemented the Optimal page replacement algorithm, and compared the performance of the replacement-policy chosen by the user (above) to the Optimal algorithm, in terms of number of page replacements for the given string. i.e:\r\n\r\n\t$ virtualmem –f 10 –r LFU –i myinputfile\r\n\t# of page replacements with LFU : 118\r\n\t# of page replacements with Optimal : 85\r\n\t% page replacement penalty using LFU : 38.8%\r\n\t\t\r\n\tTotal time to run LFU algorithm : 1214 msec\r\n\tTotal time to run Optimal algorithm : 1348 msec\r\n\tLFU is 9.9% faster than Optimal algorithm.'\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}